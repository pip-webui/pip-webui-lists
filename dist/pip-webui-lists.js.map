{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/TranslateFilter.ts","src/index.ts","src/tag_list/TagList.ts","temp/pip-webui-lists-html.min.js"],"names":[],"mappings":"AAAA;ACAA,CAAC;IAEG,mBAAmB,SAAwC;QACvD,IAAI,YAAY,GAAQ,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;cAC/C,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAE3C,MAAM,CAAC,UAAC,GAAW;YACf,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC;QACnE,CAAC,CAAA;IACL,CAAC;IAED,OAAO;SACF,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC;SAC/B,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AAExC,CAAC;;;;;ACfA,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,CAAE,YAAY,CAAE,CAAC,CAAC;AAE9C,0CAAwC;AACxC,8BAA4B;;;ACH5B,CAAC;IAOG;QAOI,2BACI,MAAiB,EACjB,QAAgC;YAIhC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YACjC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QACtC,CAAC;QAEO,qCAAS,GAAjB,UAAkB,KAAa;YAC3B,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAC1D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzB,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;YACvC,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;QAC3C,CAAC;QAEM,sCAAU,GAAjB,UAAkB,OAAuB;YACrC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;YAC1C,CAAC;QAEL,CAAC;QAEL,wBAAC;IAAD,CA/BA,AA+BC,IAAA;IAWD,IAAM,eAAe,GAAqB;QACtC,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,eAAe;QAC1B,MAAM,EAAE,YAAY;KACvB,CAAA;IAED;QAAA;QAOA,CAAC;QAAD,qBAAC;IAAD,CAPA,AAOC,IAAA;IAED,IAAM,OAAO,GAAG;QACZ,QAAQ,EAAE,eAAe;QACzB,WAAW,EAAE,uBAAuB;QACpC,UAAU,EAAE,iBAAiB;KAChC,CAAA;IAED,OAAO;SACF,MAAM,CAAC,YAAY,EAAE,CAAC,mBAAmB,CAAC,CAAC;SAC3C,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;AAEzC,CAAC;;;AC3ED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-lists.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","{\n\n    function translate($injector: angular.auto.IInjectorService) {\n        let pipTranslate: any = $injector.has('pipTranslate')\n            ? $injector.get('pipTranslate') : null;\n\n        return (key: string) => {\n            return pipTranslate ? pipTranslate.translate(key) || key : key;\n        }\n    }\n\n    angular\n        .module('pipList.Translate', [])\n        .filter('translate', translate);\n\n}","ï»¿angular.module('pipLists', [ 'pipTagList' ]);\n\nimport './dependencies/TranslateFilter';\nimport './tag_list/TagList';\n","{\n    interface ITagList {\n        tags: string[];\n        type: string;\n        typeLocal: string;\n    }\n\n    class TagListController implements ITagList {\n        public rebind: string;\n\n        public tags: string[];\n        public type: string;\n        public typeLocal: string;\n\n        constructor(\n            $scope: ng.IScope,\n            $element: ng.IRootElementService\n        ) {\n\n            // Set tags\n            $element.css('display', 'block');\n            $element.addClass('pip-tag-list');\n        }\n\n        private toBoolean(value: string): boolean {\n            if (_.isNull(value) || _.isUndefined(value)) return false;\n            if (!value) return false;\n            value = value.toString().toLowerCase();\n            return value == '1' || value == 'true';\n        }\n\n        public $onChanges(changes: TagListChanges) {\n            if (this.rebind && changes.tags) {\n                this.tags = changes.tags.currentValue;\n            }\n\n        }\n\n    }\n\n    interface ITagListBindings {\n        [key: string]: any;\n\n        tags: any,\n        type: any,\n        typeLocal: any,\n        rebuid: any\n    }\n\n    const TagListBindings: ITagListBindings = {\n        tags: '<pipTags',\n        type: '<pipType',\n        typeLocal: '<pipTypeLocal',\n        rebuid: '<pipRebind'\n    }\n\n    class TagListChanges implements ng.IOnChangesObject, ITagListBindings {\n        [key: string]: ng.IChangesObject<any>;\n\n        tags: ng.IChangesObject<string[]>;\n        type: ng.IChangesObject<string>;\n        typeLocal: ng.IChangesObject<string>;\n        rebuid: ng.IChangesObject<boolean>\n    }\n\n    const TagList = {\n        bindings: TagListBindings,\n        templateUrl: 'tag_list/TagList.html',\n        controller: TagListController\n    }\n\n    angular\n        .module('pipTagList', ['pipList.Translate'])\n        .component('pipTagList', TagList)\n\n}","(function(module) {\ntry {\n  module = angular.module('pipLists.Templates');\n} catch (e) {\n  module = angular.module('pipLists.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tag_list/TagList.html',\n    '<div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && !$ctrl.typeLocal\"><span>{{$ctrl.type.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && $ctrl.typeLocal\"><span>{{$ctrl.typeLocal.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4\" ng-repeat=\"tag in $ctrl.tags\"><span>{{::tag}}</span></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-lists-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvZGVwZW5kZW5jaWVzL1RyYW5zbGF0ZUZpbHRlci50cyIsInNyYy9pbmRleC50cyIsInNyYy90YWdfbGlzdC9UYWdMaXN0LnRzIiwidGVtcC9waXAtd2VidWktbGlzdHMtaHRtbC5taW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUNBQSxDQUFDO0lBRUcsbUJBQW1CLFNBQXdDO1FBQ3ZELElBQUksWUFBWSxHQUFRLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDO2NBQy9DLFNBQVMsQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLEdBQUcsSUFBSSxDQUFDO1FBRTNDLE1BQU0sQ0FBQyxVQUFDLEdBQVc7WUFDZixNQUFNLENBQUMsWUFBWSxHQUFHLFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQztRQUNuRSxDQUFDLENBQUE7SUFDTCxDQUFDO0lBRUQsT0FBTztTQUNGLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLENBQUM7U0FDL0IsTUFBTSxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsQ0FBQztBQUV4QyxDQUFDOzs7OztBQ2ZBLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUUsWUFBWSxDQUFFLENBQUMsQ0FBQztBQUU5QywwQ0FBd0M7QUFDeEMsOEJBQTRCOzs7QUNINUIsQ0FBQztJQU9HO1FBT0ksMkJBQ0ksTUFBaUIsRUFDakIsUUFBZ0M7WUFJaEMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUM7WUFDakMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN0QyxDQUFDO1FBRU8scUNBQVMsR0FBakIsVUFBa0IsS0FBYTtZQUMzQixFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUMxRCxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztnQkFBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ3pCLEtBQUssR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7WUFDdkMsTUFBTSxDQUFDLEtBQUssSUFBSSxHQUFHLElBQUksS0FBSyxJQUFJLE1BQU0sQ0FBQztRQUMzQyxDQUFDO1FBRU0sc0NBQVUsR0FBakIsVUFBa0IsT0FBdUI7WUFDckMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztnQkFDOUIsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQztZQUMxQyxDQUFDO1FBRUwsQ0FBQztRQUVMLHdCQUFDO0lBQUQsQ0EvQkEsQUErQkMsSUFBQTtJQVdELElBQU0sZUFBZSxHQUFxQjtRQUN0QyxJQUFJLEVBQUUsVUFBVTtRQUNoQixJQUFJLEVBQUUsVUFBVTtRQUNoQixTQUFTLEVBQUUsZUFBZTtRQUMxQixNQUFNLEVBQUUsWUFBWTtLQUN2QixDQUFBO0lBRUQ7UUFBQTtRQU9BLENBQUM7UUFBRCxxQkFBQztJQUFELENBUEEsQUFPQyxJQUFBO0lBRUQsSUFBTSxPQUFPLEdBQUc7UUFDWixRQUFRLEVBQUUsZUFBZTtRQUN6QixXQUFXLEVBQUUsdUJBQXVCO1FBQ3BDLFVBQVUsRUFBRSxpQkFBaUI7S0FDaEMsQ0FBQTtJQUVELE9BQU87U0FDRixNQUFNLENBQUMsWUFBWSxFQUFFLENBQUMsbUJBQW1CLENBQUMsQ0FBQztTQUMzQyxTQUFTLENBQUMsWUFBWSxFQUFFLE9BQU8sQ0FBQyxDQUFBO0FBRXpDLENBQUM7OztBQzNFRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIntcblxuICAgIGZ1bmN0aW9uIHRyYW5zbGF0ZSgkaW5qZWN0b3I6IGFuZ3VsYXIuYXV0by5JSW5qZWN0b3JTZXJ2aWNlKSB7XG4gICAgICAgIGxldCBwaXBUcmFuc2xhdGU6IGFueSA9ICRpbmplY3Rvci5oYXMoJ3BpcFRyYW5zbGF0ZScpXG4gICAgICAgICAgICA/ICRpbmplY3Rvci5nZXQoJ3BpcFRyYW5zbGF0ZScpIDogbnVsbDtcblxuICAgICAgICByZXR1cm4gKGtleTogc3RyaW5nKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gcGlwVHJhbnNsYXRlID8gcGlwVHJhbnNsYXRlLnRyYW5zbGF0ZShrZXkpIHx8IGtleSA6IGtleTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZSgncGlwTGlzdC5UcmFuc2xhdGUnLCBbXSlcbiAgICAgICAgLmZpbHRlcigndHJhbnNsYXRlJywgdHJhbnNsYXRlKTtcblxufSIsIu+7v2FuZ3VsYXIubW9kdWxlKCdwaXBMaXN0cycsIFsgJ3BpcFRhZ0xpc3QnIF0pO1xuXG5pbXBvcnQgJy4vZGVwZW5kZW5jaWVzL1RyYW5zbGF0ZUZpbHRlcic7XG5pbXBvcnQgJy4vdGFnX2xpc3QvVGFnTGlzdCc7XG4iLCJ7XG4gICAgaW50ZXJmYWNlIElUYWdMaXN0IHtcbiAgICAgICAgdGFnczogc3RyaW5nW107XG4gICAgICAgIHR5cGU6IHN0cmluZztcbiAgICAgICAgdHlwZUxvY2FsOiBzdHJpbmc7XG4gICAgfVxuXG4gICAgY2xhc3MgVGFnTGlzdENvbnRyb2xsZXIgaW1wbGVtZW50cyBJVGFnTGlzdCB7XG4gICAgICAgIHB1YmxpYyByZWJpbmQ6IHN0cmluZztcblxuICAgICAgICBwdWJsaWMgdGFnczogc3RyaW5nW107XG4gICAgICAgIHB1YmxpYyB0eXBlOiBzdHJpbmc7XG4gICAgICAgIHB1YmxpYyB0eXBlTG9jYWw6IHN0cmluZztcblxuICAgICAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgICAgICRzY29wZTogbmcuSVNjb3BlLFxuICAgICAgICAgICAgJGVsZW1lbnQ6IG5nLklSb290RWxlbWVudFNlcnZpY2VcbiAgICAgICAgKSB7XG5cbiAgICAgICAgICAgIC8vIFNldCB0YWdzXG4gICAgICAgICAgICAkZWxlbWVudC5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcbiAgICAgICAgICAgICRlbGVtZW50LmFkZENsYXNzKCdwaXAtdGFnLWxpc3QnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHByaXZhdGUgdG9Cb29sZWFuKHZhbHVlOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgICAgICAgICAgIGlmIChfLmlzTnVsbCh2YWx1ZSkgfHwgXy5pc1VuZGVmaW5lZCh2YWx1ZSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIGlmICghdmFsdWUpIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIHZhbHVlID0gdmFsdWUudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgcmV0dXJuIHZhbHVlID09ICcxJyB8fCB2YWx1ZSA9PSAndHJ1ZSc7XG4gICAgICAgIH1cblxuICAgICAgICBwdWJsaWMgJG9uQ2hhbmdlcyhjaGFuZ2VzOiBUYWdMaXN0Q2hhbmdlcykge1xuICAgICAgICAgICAgaWYgKHRoaXMucmViaW5kICYmIGNoYW5nZXMudGFncykge1xuICAgICAgICAgICAgICAgIHRoaXMudGFncyA9IGNoYW5nZXMudGFncy5jdXJyZW50VmFsdWU7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgaW50ZXJmYWNlIElUYWdMaXN0QmluZGluZ3Mge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XG5cbiAgICAgICAgdGFnczogYW55LFxuICAgICAgICB0eXBlOiBhbnksXG4gICAgICAgIHR5cGVMb2NhbDogYW55LFxuICAgICAgICByZWJ1aWQ6IGFueVxuICAgIH1cblxuICAgIGNvbnN0IFRhZ0xpc3RCaW5kaW5nczogSVRhZ0xpc3RCaW5kaW5ncyA9IHtcbiAgICAgICAgdGFnczogJzxwaXBUYWdzJyxcbiAgICAgICAgdHlwZTogJzxwaXBUeXBlJyxcbiAgICAgICAgdHlwZUxvY2FsOiAnPHBpcFR5cGVMb2NhbCcsXG4gICAgICAgIHJlYnVpZDogJzxwaXBSZWJpbmQnXG4gICAgfVxuXG4gICAgY2xhc3MgVGFnTGlzdENoYW5nZXMgaW1wbGVtZW50cyBuZy5JT25DaGFuZ2VzT2JqZWN0LCBJVGFnTGlzdEJpbmRpbmdzIHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogbmcuSUNoYW5nZXNPYmplY3Q8YW55PjtcblxuICAgICAgICB0YWdzOiBuZy5JQ2hhbmdlc09iamVjdDxzdHJpbmdbXT47XG4gICAgICAgIHR5cGU6IG5nLklDaGFuZ2VzT2JqZWN0PHN0cmluZz47XG4gICAgICAgIHR5cGVMb2NhbDogbmcuSUNoYW5nZXNPYmplY3Q8c3RyaW5nPjtcbiAgICAgICAgcmVidWlkOiBuZy5JQ2hhbmdlc09iamVjdDxib29sZWFuPlxuICAgIH1cblxuICAgIGNvbnN0IFRhZ0xpc3QgPSB7XG4gICAgICAgIGJpbmRpbmdzOiBUYWdMaXN0QmluZGluZ3MsXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndGFnX2xpc3QvVGFnTGlzdC5odG1sJyxcbiAgICAgICAgY29udHJvbGxlcjogVGFnTGlzdENvbnRyb2xsZXJcbiAgICB9XG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoJ3BpcFRhZ0xpc3QnLCBbJ3BpcExpc3QuVHJhbnNsYXRlJ10pXG4gICAgICAgIC5jb21wb25lbnQoJ3BpcFRhZ0xpc3QnLCBUYWdMaXN0KVxuXG59IiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcExpc3RzLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTGlzdHMuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCd0YWdfbGlzdC9UYWdMaXN0Lmh0bWwnLFxuICAgICc8ZGl2IGNsYXNzPVwicGlwLWNoaXAgcm00IHBpcC10eXBlLWNoaXAgcGlwLXR5cGUtY2hpcC1sZWZ0IHt7XFwnYmctXFwnICsgJGN0cmwudHlwZSArIFxcJy1jaGlwc1xcJ319XCIgbmctaWY9XCIkY3RybC50eXBlICYmICEkY3RybC50eXBlTG9jYWxcIj48c3Bhbj57eyRjdHJsLnR5cGUudG9VcHBlckNhc2UoKSB8IHRyYW5zbGF0ZSB8IHVwcGVyY2FzZX19PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtY2hpcCBybTQgcGlwLXR5cGUtY2hpcCBwaXAtdHlwZS1jaGlwLWxlZnQge3tcXCdiZy1cXCcgKyAkY3RybC50eXBlICsgXFwnLWNoaXBzXFwnfX1cIiBuZy1pZj1cIiRjdHJsLnR5cGUgJiYgJGN0cmwudHlwZUxvY2FsXCI+PHNwYW4+e3skY3RybC50eXBlTG9jYWwudG9VcHBlckNhc2UoKSB8IHRyYW5zbGF0ZSB8IHVwcGVyY2FzZX19PC9zcGFuPjwvZGl2PjxkaXYgY2xhc3M9XCJwaXAtY2hpcCBybTRcIiBuZy1yZXBlYXQ9XCJ0YWcgaW4gJGN0cmwudGFnc1wiPjxzcGFuPnt7Ojp0YWd9fTwvc3Bhbj48L2Rpdj4nKTtcbn1dKTtcbn0pKCk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBpcC13ZWJ1aS1saXN0cy1odG1sLm1pbi5qcy5tYXBcbiJdfQ=="}