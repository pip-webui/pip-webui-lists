<<<<<<< HEAD
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/lists.ts","src/tag_list/tag_list.ts","temp/pip-webui-lists-html.min.js"],"names":[],"mappings":"AAAA;ACAA,mBAAmB,SAAS;IACxB,IAAI,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;UAC1C,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;IAE3C,MAAM,CAAC,UAAU,GAAG;QAChB,MAAM,CAAC,YAAY,GAAI,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC;IACpE,CAAC,CAAA;AACL,CAAC;AAED,OAAO;KACF,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC;KAC/B,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;;;;;ACXnC,oCAAkC;AAEnC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,CAAE,YAAY,CAAE,CAAC,CAAC;;;ACI7C;IAOI,2BACK,MAAiB,EACjB,QAAgC;QAFrC,iBAmBE;QAbE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;gBACrB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACP,CAAC;QAED,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IACrC,CAAC;IAEO,qCAAS,GAAjB,UAAkB,KAAa;QAC5B,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAC1D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACzB,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;IAC1C,CAAC;IACL,wBAAC;AAAD,CAlCD,AAkCE,IAAA;AAOF,iBAAkB,MAAM;IACpB,MAAM,CAAC;QACH,QAAQ,EAAE,GAAG;QACb,KAAK,EAAE;YACH,OAAO,EAAE,GAAG;YACZ,OAAO,EAAE,GAAG;YACZ,YAAY,EAAE,GAAG;SACpB;QACD,WAAW,EAAE,wBAAwB;QACrC,UAAU,EAAE,iBAAiB;QAC7B,YAAY,EAAE,OAAO;KACxB,CAAC;AACF,CAAC;AAEL,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,mBAAmB,CAAC,CAAC;KAC9C,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;;;AC9DrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-lists.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","function translate($injector) {\n    var pipTranslate = $injector.has('pipTranslate') \n        ? $injector.get('pipTranslate') : null;\n\n    return function (key) {\n        return pipTranslate  ? pipTranslate.translate(key) || key : key;\n    }\n}\n\nangular\n    .module('pipList.Translate', [])\n    .filter('translate', translate);\n","ï»¿import './dependencies/translate';\n\nangular.module('pipLists', [ 'pipTagList' ]);\n","interface ITagList {\n    tags: string[];\n    type: string;\n    typeLocal: string;\n}\n\nclass TagListController implements ITagList {\n    private _rebind: string;\n\n    public tags: string[];\n    public type: string;\n    public typeLocal: string;\n\n    constructor(\n         $scope: ng.IScope, \n         $element: ng.IRootElementService\n    ) {\n\n        // Set tags\n        this.tags = $scope['pipTags'];\n        this.type = $scope['pipType'];\n        this.typeLocal = $scope['pipTypeLocal'];\n        this._rebind = $scope['pipRebind'];\n      \n        if (this.toBoolean(this._rebind)) {\n            $scope.$watch('pipTags', () => {\n                this.tags = $scope['pipTags'];\n            });\n        }\n\n        $element.css('display', 'block');\n        $element.addClass('pip-tag-list');\n     }\n\n     private toBoolean(value: string): boolean {\n        if (_.isNull(value) || _.isUndefined(value)) return false;\n        if (!value) return false;\n        value = value.toString().toLowerCase();\n        return value == '1' || value == 'true';\n     }\n }\n\n/**\n * pipTags - set of tags\n * pipType - additional type tag\n * pipTypeLocal - additional translated type tag\n */\nfunction TagList ($parse) {\n    return {\n        restrict: 'E',\n        scope: {\n            pipTags: '=',\n            pipType: '=',\n            pipTypeLocal: '='\n        },\n        templateUrl: 'tag_list/tag_list.html',\n        controller: TagListController,\n        controllerAs: '$ctrl'\n    };\n    }\n\nangular.module('pipTagList', ['pipList.Translate'])\n    .directive('pipTagList', TagList)\n","(function(module) {\ntry {\n  module = angular.module('pipLists.Templates');\n} catch (e) {\n  module = angular.module('pipLists.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tag_list/tag_list.html',\n    '<div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && !$ctrl.typeLocal\"><span>{{$ctrl.type.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && $ctrl.typeLocal\"><span>{{$ctrl.typeLocal.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4\" ng-repeat=\"tag in $ctrl.tags\"><span>{{::tag}}</span></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-lists-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvZGVwZW5kZW5jaWVzL3RyYW5zbGF0ZS50cyIsInNyYy9saXN0cy50cyIsInNyYy90YWdfbGlzdC90YWdfbGlzdC50cyIsInRlbXAvcGlwLXdlYnVpLWxpc3RzLWh0bWwubWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsbUJBQW1CLFNBQVM7SUFDeEIsSUFBSSxZQUFZLEdBQUcsU0FBUyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUM7VUFDMUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxjQUFjLENBQUMsR0FBRyxJQUFJLENBQUM7SUFFM0MsTUFBTSxDQUFDLFVBQVUsR0FBRztRQUNoQixNQUFNLENBQUMsWUFBWSxHQUFJLFlBQVksQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLElBQUksR0FBRyxHQUFHLEdBQUcsQ0FBQztJQUNwRSxDQUFDLENBQUE7QUFDTCxDQUFDO0FBRUQsT0FBTztLQUNGLE1BQU0sQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLENBQUM7S0FDL0IsTUFBTSxDQUFDLFdBQVcsRUFBRSxTQUFTLENBQUMsQ0FBQzs7Ozs7QUNYbkMsb0NBQWtDO0FBRW5DLE9BQU8sQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLENBQUUsWUFBWSxDQUFFLENBQUMsQ0FBQzs7O0FDSTdDO0lBT0ksMkJBQ0ssTUFBaUIsRUFDakIsUUFBZ0M7UUFGckMsaUJBbUJFO1FBYkUsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLElBQUksR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDeEMsSUFBSSxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7UUFFbkMsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQy9CLE1BQU0sQ0FBQyxNQUFNLENBQUMsU0FBUyxFQUFFO2dCQUNyQixLQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNsQyxDQUFDLENBQUMsQ0FBQztRQUNQLENBQUM7UUFFRCxRQUFRLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNqQyxRQUFRLENBQUMsUUFBUSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFTyxxQ0FBUyxHQUFqQixVQUFrQixLQUFhO1FBQzVCLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDMUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7WUFBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQ3pCLEtBQUssR0FBRyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDdkMsTUFBTSxDQUFDLEtBQUssSUFBSSxHQUFHLElBQUksS0FBSyxJQUFJLE1BQU0sQ0FBQztJQUMxQyxDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQWxDRCxBQWtDRSxJQUFBO0FBT0YsaUJBQWtCLE1BQU07SUFDcEIsTUFBTSxDQUFDO1FBQ0gsUUFBUSxFQUFFLEdBQUc7UUFDYixLQUFLLEVBQUU7WUFDSCxPQUFPLEVBQUUsR0FBRztZQUNaLE9BQU8sRUFBRSxHQUFHO1lBQ1osWUFBWSxFQUFFLEdBQUc7U0FDcEI7UUFDRCxXQUFXLEVBQUUsd0JBQXdCO1FBQ3JDLFVBQVUsRUFBRSxpQkFBaUI7UUFDN0IsWUFBWSxFQUFFLE9BQU87S0FDeEIsQ0FBQztBQUNGLENBQUM7QUFFTCxPQUFPLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLENBQUM7S0FDOUMsU0FBUyxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQTs7O0FDOURyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImZ1bmN0aW9uIHRyYW5zbGF0ZSgkaW5qZWN0b3IpIHtcbiAgICB2YXIgcGlwVHJhbnNsYXRlID0gJGluamVjdG9yLmhhcygncGlwVHJhbnNsYXRlJykgXG4gICAgICAgID8gJGluamVjdG9yLmdldCgncGlwVHJhbnNsYXRlJykgOiBudWxsO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgcmV0dXJuIHBpcFRyYW5zbGF0ZSAgPyBwaXBUcmFuc2xhdGUudHJhbnNsYXRlKGtleSkgfHwga2V5IDoga2V5O1xuICAgIH1cbn1cblxuYW5ndWxhclxuICAgIC5tb2R1bGUoJ3BpcExpc3QuVHJhbnNsYXRlJywgW10pXG4gICAgLmZpbHRlcigndHJhbnNsYXRlJywgdHJhbnNsYXRlKTtcbiIsIu+7v2ltcG9ydCAnLi9kZXBlbmRlbmNpZXMvdHJhbnNsYXRlJztcblxuYW5ndWxhci5tb2R1bGUoJ3BpcExpc3RzJywgWyAncGlwVGFnTGlzdCcgXSk7XG4iLCJpbnRlcmZhY2UgSVRhZ0xpc3Qge1xuICAgIHRhZ3M6IHN0cmluZ1tdO1xuICAgIHR5cGU6IHN0cmluZztcbiAgICB0eXBlTG9jYWw6IHN0cmluZztcbn1cblxuY2xhc3MgVGFnTGlzdENvbnRyb2xsZXIgaW1wbGVtZW50cyBJVGFnTGlzdCB7XG4gICAgcHJpdmF0ZSBfcmViaW5kOiBzdHJpbmc7XG5cbiAgICBwdWJsaWMgdGFnczogc3RyaW5nW107XG4gICAgcHVibGljIHR5cGU6IHN0cmluZztcbiAgICBwdWJsaWMgdHlwZUxvY2FsOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihcbiAgICAgICAgICRzY29wZTogbmcuSVNjb3BlLCBcbiAgICAgICAgICRlbGVtZW50OiBuZy5JUm9vdEVsZW1lbnRTZXJ2aWNlXG4gICAgKSB7XG5cbiAgICAgICAgLy8gU2V0IHRhZ3NcbiAgICAgICAgdGhpcy50YWdzID0gJHNjb3BlWydwaXBUYWdzJ107XG4gICAgICAgIHRoaXMudHlwZSA9ICRzY29wZVsncGlwVHlwZSddO1xuICAgICAgICB0aGlzLnR5cGVMb2NhbCA9ICRzY29wZVsncGlwVHlwZUxvY2FsJ107XG4gICAgICAgIHRoaXMuX3JlYmluZCA9ICRzY29wZVsncGlwUmViaW5kJ107XG4gICAgICBcbiAgICAgICAgaWYgKHRoaXMudG9Cb29sZWFuKHRoaXMuX3JlYmluZCkpIHtcbiAgICAgICAgICAgICRzY29wZS4kd2F0Y2goJ3BpcFRhZ3MnLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy50YWdzID0gJHNjb3BlWydwaXBUYWdzJ107XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICAgICRlbGVtZW50LmNzcygnZGlzcGxheScsICdibG9jaycpO1xuICAgICAgICAkZWxlbWVudC5hZGRDbGFzcygncGlwLXRhZy1saXN0Jyk7XG4gICAgIH1cblxuICAgICBwcml2YXRlIHRvQm9vbGVhbih2YWx1ZTogc3RyaW5nKTogYm9vbGVhbiB7XG4gICAgICAgIGlmIChfLmlzTnVsbCh2YWx1ZSkgfHwgXy5pc1VuZGVmaW5lZCh2YWx1ZSkpIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKCF2YWx1ZSkgcmV0dXJuIGZhbHNlO1xuICAgICAgICB2YWx1ZSA9IHZhbHVlLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgcmV0dXJuIHZhbHVlID09ICcxJyB8fCB2YWx1ZSA9PSAndHJ1ZSc7XG4gICAgIH1cbiB9XG5cbi8qKlxuICogcGlwVGFncyAtIHNldCBvZiB0YWdzXG4gKiBwaXBUeXBlIC0gYWRkaXRpb25hbCB0eXBlIHRhZ1xuICogcGlwVHlwZUxvY2FsIC0gYWRkaXRpb25hbCB0cmFuc2xhdGVkIHR5cGUgdGFnXG4gKi9cbmZ1bmN0aW9uIFRhZ0xpc3QgKCRwYXJzZSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHJlc3RyaWN0OiAnRScsXG4gICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICBwaXBUYWdzOiAnPScsXG4gICAgICAgICAgICBwaXBUeXBlOiAnPScsXG4gICAgICAgICAgICBwaXBUeXBlTG9jYWw6ICc9J1xuICAgICAgICB9LFxuICAgICAgICB0ZW1wbGF0ZVVybDogJ3RhZ19saXN0L3RhZ19saXN0Lmh0bWwnLFxuICAgICAgICBjb250cm9sbGVyOiBUYWdMaXN0Q29udHJvbGxlcixcbiAgICAgICAgY29udHJvbGxlckFzOiAnJGN0cmwnXG4gICAgfTtcbiAgICB9XG5cbmFuZ3VsYXIubW9kdWxlKCdwaXBUYWdMaXN0JywgWydwaXBMaXN0LlRyYW5zbGF0ZSddKVxuICAgIC5kaXJlY3RpdmUoJ3BpcFRhZ0xpc3QnLCBUYWdMaXN0KVxuIiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcExpc3RzLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTGlzdHMuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCd0YWdfbGlzdC90YWdfbGlzdC5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInBpcC1jaGlwIHJtNCBwaXAtdHlwZS1jaGlwIHBpcC10eXBlLWNoaXAtbGVmdCB7e1xcJ2JnLVxcJyArICRjdHJsLnR5cGUgKyBcXCctY2hpcHNcXCd9fVwiIG5nLWlmPVwiJGN0cmwudHlwZSAmJiAhJGN0cmwudHlwZUxvY2FsXCI+PHNwYW4+e3skY3RybC50eXBlLnRvVXBwZXJDYXNlKCkgfCB0cmFuc2xhdGUgfCB1cHBlcmNhc2V9fTwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWNoaXAgcm00IHBpcC10eXBlLWNoaXAgcGlwLXR5cGUtY2hpcC1sZWZ0IHt7XFwnYmctXFwnICsgJGN0cmwudHlwZSArIFxcJy1jaGlwc1xcJ319XCIgbmctaWY9XCIkY3RybC50eXBlICYmICRjdHJsLnR5cGVMb2NhbFwiPjxzcGFuPnt7JGN0cmwudHlwZUxvY2FsLnRvVXBwZXJDYXNlKCkgfCB0cmFuc2xhdGUgfCB1cHBlcmNhc2V9fTwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWNoaXAgcm00XCIgbmctcmVwZWF0PVwidGFnIGluICRjdHJsLnRhZ3NcIj48c3Bhbj57ezo6dGFnfX08L3NwYW4+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXAtd2VidWktbGlzdHMtaHRtbC5taW4uanMubWFwXG4iXX0="}
=======
{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/lists.ts","src/tag_list/tag_list.ts","temp/pip-webui-lists-html.min.js"],"names":[],"mappings":"AAAA;ACAA,CAAC;IACG,YAAY,CAAC;IACb,wBAAwB,SAAwC;QAC5D,IAAI,YAAY,GAAQ,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;cAC/C,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAE3C,MAAM,CAAC,UAAC,GAAW;YACf,MAAM,CAAC,YAAY,GAAI,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC;QACpE,CAAC,CAAA;IACL,CAAC;IAED,OAAO,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC;SAClC,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,CAAC;AAE7C,CAAC,CAAC,EAAE,CAAC;;;;ACdJ,oCAAkC;AAEnC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,CAAE,YAAY,CAAE,CAAC,CAAC;;ACD7C,CAAC;IAOG;QAOI,2BACI,MAAiB,EACjB,QAAgC;YAIhC,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;YACjC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QACtC,CAAC;QAEO,qCAAS,GAAjB,UAAkB,KAAa;YAC3B,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YAC1D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;gBAAC,MAAM,CAAC,KAAK,CAAC;YACzB,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;YACvC,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;QAC3C,CAAC;QAEM,sCAAU,GAAjB,UAAkB,OAAuB;YACrC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC9B,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC;YAC1C,CAAC;QAEL,CAAC;QAEL,wBAAC;IAAD,CA/BA,AA+BC,IAAA;IAWD,IAAM,eAAe,GAAqB;QACtC,IAAI,EAAE,UAAU;QAChB,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,eAAe;QAC1B,MAAM,EAAE,YAAY;KACvB,CAAA;IAED;QAAA;QAOA,CAAC;QAAD,qBAAC;IAAD,CAPA,AAOC,IAAA;IAED,IAAM,OAAO,GAAG;QACZ,QAAQ,EAAE,eAAe;QACzB,WAAW,EAAE,wBAAwB;QACrC,UAAU,EAAE,iBAAiB;KAChC,CAAA;IAED,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,mBAAmB,CAAC,CAAC;SAC9C,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;AAEzC,CAAC,CAAC,EAAE,CAAC;;AC3EL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-lists.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(() => {\r\n    'use strict';\r\n    function filerTranslate($injector: angular.auto.IInjectorService) {\r\n        let pipTranslate: any = $injector.has('pipTranslate') \r\n            ? $injector.get('pipTranslate') : null;\r\n\r\n        return (key: string) => {\r\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\r\n        }\r\n    }\r\n\r\n    angular.module('pipList.Translate', [])\r\n        .filter('translate', filerTranslate);\r\n\r\n})();\r\n","ï»¿import './dependencies/translate';\r\n\r\nangular.module('pipLists', [ 'pipTagList' ]);\r\n","\r\n(() => {\r\n    interface ITagList {\r\n        tags: string[];\r\n        type: string;\r\n        typeLocal: string;\r\n    }\r\n\r\n    class TagListController implements ITagList {\r\n        public rebind: string;\r\n\r\n        public tags: string[];\r\n        public type: string;\r\n        public typeLocal: string;\r\n\r\n        constructor(\r\n            $scope: ng.IScope, \r\n            $element: ng.IRootElementService\r\n        ) {\r\n\r\n            // Set tags\r\n            $element.css('display', 'block');\r\n            $element.addClass('pip-tag-list');\r\n        }\r\n\r\n        private toBoolean(value: string): boolean {\r\n            if (_.isNull(value) || _.isUndefined(value)) return false;\r\n            if (!value) return false;\r\n            value = value.toString().toLowerCase();\r\n            return value == '1' || value == 'true';\r\n        }\r\n\r\n        public $onChanges(changes: TagListChanges) {\r\n            if (this.rebind && changes.tags) {\r\n                this.tags = changes.tags.currentValue;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    interface ITagListBindings {\r\n        [key: string]: any;\r\n\r\n        tags: any,\r\n        type: any,\r\n        typeLocal: any,\r\n        rebuid: any\r\n    }\r\n\r\n    const TagListBindings: ITagListBindings = {\r\n        tags: '<pipTags',\r\n        type: '<pipType',\r\n        typeLocal: '<pipTypeLocal',\r\n        rebuid: '<pipRebind'\r\n    }\r\n\r\n    class TagListChanges implements ng.IOnChangesObject, ITagListBindings {\r\n        [key: string]: ng.IChangesObject<any>;\r\n        \r\n        tags: ng.IChangesObject<string[]>;\r\n        type: ng.IChangesObject<string>;\r\n        typeLocal: ng.IChangesObject<string>;\r\n        rebuid: ng.IChangesObject<boolean>\r\n    }\r\n\r\n    const TagList = {\r\n        bindings: TagListBindings,\r\n        templateUrl: 'tag_list/tag_list.html',\r\n        controller: TagListController\r\n    }\r\n\r\n    angular.module('pipTagList', ['pipList.Translate'])\r\n        .component('pipTagList', TagList)\r\n\r\n})();","(function(module) {\ntry {\n  module = angular.module('pipLists.Templates');\n} catch (e) {\n  module = angular.module('pipLists.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tag_list/tag_list.html',\n    '<div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && !$ctrl.typeLocal\"><span>{{$ctrl.type.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && $ctrl.typeLocal\"><span>{{$ctrl.typeLocal.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4\" ng-repeat=\"tag in $ctrl.tags\"><span>{{::tag}}</span></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-lists-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvZGVwZW5kZW5jaWVzL3RyYW5zbGF0ZS50cyIsInNyYy9saXN0cy50cyIsInNyYy90YWdfbGlzdC90YWdfbGlzdC50cyIsInRlbXAvcGlwLXdlYnVpLWxpc3RzLWh0bWwubWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FDQUEsQ0FBQztJQUNHLFlBQVksQ0FBQztJQUNiLHdCQUF3QixTQUF3QztRQUM1RCxJQUFJLFlBQVksR0FBUSxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQztjQUMvQyxTQUFTLENBQUMsR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUUzQyxNQUFNLENBQUMsVUFBQyxHQUFXO1lBQ2YsTUFBTSxDQUFDLFlBQVksR0FBSSxZQUFZLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEdBQUcsR0FBRyxHQUFHLENBQUM7UUFDcEUsQ0FBQyxDQUFBO0lBQ0wsQ0FBQztJQUVELE9BQU8sQ0FBQyxNQUFNLENBQUMsbUJBQW1CLEVBQUUsRUFBRSxDQUFDO1NBQ2xDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUM7QUFFN0MsQ0FBQyxDQUFDLEVBQUUsQ0FBQzs7OztBQ2RKLG9DQUFrQztBQUVuQyxPQUFPLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxDQUFFLFlBQVksQ0FBRSxDQUFDLENBQUM7O0FDRDdDLENBQUM7SUFPRztRQU9JLDJCQUNJLE1BQWlCLEVBQ2pCLFFBQWdDO1lBSWhDLFFBQVEsQ0FBQyxHQUFHLENBQUMsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBQ2pDLFFBQVEsQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDdEMsQ0FBQztRQUVPLHFDQUFTLEdBQWpCLFVBQWtCLEtBQWE7WUFDM0IsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO2dCQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7WUFDMUQsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7Z0JBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQztZQUN6QixLQUFLLEdBQUcsS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3ZDLE1BQU0sQ0FBQyxLQUFLLElBQUksR0FBRyxJQUFJLEtBQUssSUFBSSxNQUFNLENBQUM7UUFDM0MsQ0FBQztRQUVNLHNDQUFVLEdBQWpCLFVBQWtCLE9BQXVCO1lBQ3JDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7Z0JBQzlCLElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUM7WUFDMUMsQ0FBQztRQUVMLENBQUM7UUFFTCx3QkFBQztJQUFELENBL0JBLEFBK0JDLElBQUE7SUFXRCxJQUFNLGVBQWUsR0FBcUI7UUFDdEMsSUFBSSxFQUFFLFVBQVU7UUFDaEIsSUFBSSxFQUFFLFVBQVU7UUFDaEIsU0FBUyxFQUFFLGVBQWU7UUFDMUIsTUFBTSxFQUFFLFlBQVk7S0FDdkIsQ0FBQTtJQUVEO1FBQUE7UUFPQSxDQUFDO1FBQUQscUJBQUM7SUFBRCxDQVBBLEFBT0MsSUFBQTtJQUVELElBQU0sT0FBTyxHQUFHO1FBQ1osUUFBUSxFQUFFLGVBQWU7UUFDekIsV0FBVyxFQUFFLHdCQUF3QjtRQUNyQyxVQUFVLEVBQUUsaUJBQWlCO0tBQ2hDLENBQUE7SUFFRCxPQUFPLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBRSxDQUFDLG1CQUFtQixDQUFDLENBQUM7U0FDOUMsU0FBUyxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQTtBQUV6QyxDQUFDLENBQUMsRUFBRSxDQUFDOztBQzNFTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIigoKSA9PiB7XHJcbiAgICAndXNlIHN0cmljdCc7XHJcbiAgICBmdW5jdGlvbiBmaWxlclRyYW5zbGF0ZSgkaW5qZWN0b3I6IGFuZ3VsYXIuYXV0by5JSW5qZWN0b3JTZXJ2aWNlKSB7XHJcbiAgICAgICAgbGV0IHBpcFRyYW5zbGF0ZTogYW55ID0gJGluamVjdG9yLmhhcygncGlwVHJhbnNsYXRlJykgXHJcbiAgICAgICAgICAgID8gJGluamVjdG9yLmdldCgncGlwVHJhbnNsYXRlJykgOiBudWxsO1xyXG5cclxuICAgICAgICByZXR1cm4gKGtleTogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBwaXBUcmFuc2xhdGUgID8gcGlwVHJhbnNsYXRlLnRyYW5zbGF0ZShrZXkpIHx8IGtleSA6IGtleTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYW5ndWxhci5tb2R1bGUoJ3BpcExpc3QuVHJhbnNsYXRlJywgW10pXHJcbiAgICAgICAgLmZpbHRlcigndHJhbnNsYXRlJywgZmlsZXJUcmFuc2xhdGUpO1xyXG5cclxufSkoKTtcclxuIiwi77u/aW1wb3J0ICcuL2RlcGVuZGVuY2llcy90cmFuc2xhdGUnO1xyXG5cclxuYW5ndWxhci5tb2R1bGUoJ3BpcExpc3RzJywgWyAncGlwVGFnTGlzdCcgXSk7XHJcbiIsIlxyXG4oKCkgPT4ge1xyXG4gICAgaW50ZXJmYWNlIElUYWdMaXN0IHtcclxuICAgICAgICB0YWdzOiBzdHJpbmdbXTtcclxuICAgICAgICB0eXBlOiBzdHJpbmc7XHJcbiAgICAgICAgdHlwZUxvY2FsOiBzdHJpbmc7XHJcbiAgICB9XHJcblxyXG4gICAgY2xhc3MgVGFnTGlzdENvbnRyb2xsZXIgaW1wbGVtZW50cyBJVGFnTGlzdCB7XHJcbiAgICAgICAgcHVibGljIHJlYmluZDogc3RyaW5nO1xyXG5cclxuICAgICAgICBwdWJsaWMgdGFnczogc3RyaW5nW107XHJcbiAgICAgICAgcHVibGljIHR5cGU6IHN0cmluZztcclxuICAgICAgICBwdWJsaWMgdHlwZUxvY2FsOiBzdHJpbmc7XHJcblxyXG4gICAgICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgICAgICAkc2NvcGU6IG5nLklTY29wZSwgXHJcbiAgICAgICAgICAgICRlbGVtZW50OiBuZy5JUm9vdEVsZW1lbnRTZXJ2aWNlXHJcbiAgICAgICAgKSB7XHJcblxyXG4gICAgICAgICAgICAvLyBTZXQgdGFnc1xyXG4gICAgICAgICAgICAkZWxlbWVudC5jc3MoJ2Rpc3BsYXknLCAnYmxvY2snKTtcclxuICAgICAgICAgICAgJGVsZW1lbnQuYWRkQ2xhc3MoJ3BpcC10YWctbGlzdCcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHJpdmF0ZSB0b0Jvb2xlYW4odmFsdWU6IHN0cmluZyk6IGJvb2xlYW4ge1xyXG4gICAgICAgICAgICBpZiAoXy5pc051bGwodmFsdWUpIHx8IF8uaXNVbmRlZmluZWQodmFsdWUpKSByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgIGlmICghdmFsdWUpIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgICAgICAgIHJldHVybiB2YWx1ZSA9PSAnMScgfHwgdmFsdWUgPT0gJ3RydWUnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcHVibGljICRvbkNoYW5nZXMoY2hhbmdlczogVGFnTGlzdENoYW5nZXMpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMucmViaW5kICYmIGNoYW5nZXMudGFncykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy50YWdzID0gY2hhbmdlcy50YWdzLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIGludGVyZmFjZSBJVGFnTGlzdEJpbmRpbmdzIHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiBhbnk7XHJcblxyXG4gICAgICAgIHRhZ3M6IGFueSxcclxuICAgICAgICB0eXBlOiBhbnksXHJcbiAgICAgICAgdHlwZUxvY2FsOiBhbnksXHJcbiAgICAgICAgcmVidWlkOiBhbnlcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCBUYWdMaXN0QmluZGluZ3M6IElUYWdMaXN0QmluZGluZ3MgPSB7XHJcbiAgICAgICAgdGFnczogJzxwaXBUYWdzJyxcclxuICAgICAgICB0eXBlOiAnPHBpcFR5cGUnLFxyXG4gICAgICAgIHR5cGVMb2NhbDogJzxwaXBUeXBlTG9jYWwnLFxyXG4gICAgICAgIHJlYnVpZDogJzxwaXBSZWJpbmQnXHJcbiAgICB9XHJcblxyXG4gICAgY2xhc3MgVGFnTGlzdENoYW5nZXMgaW1wbGVtZW50cyBuZy5JT25DaGFuZ2VzT2JqZWN0LCBJVGFnTGlzdEJpbmRpbmdzIHtcclxuICAgICAgICBba2V5OiBzdHJpbmddOiBuZy5JQ2hhbmdlc09iamVjdDxhbnk+O1xyXG4gICAgICAgIFxyXG4gICAgICAgIHRhZ3M6IG5nLklDaGFuZ2VzT2JqZWN0PHN0cmluZ1tdPjtcclxuICAgICAgICB0eXBlOiBuZy5JQ2hhbmdlc09iamVjdDxzdHJpbmc+O1xyXG4gICAgICAgIHR5cGVMb2NhbDogbmcuSUNoYW5nZXNPYmplY3Q8c3RyaW5nPjtcclxuICAgICAgICByZWJ1aWQ6IG5nLklDaGFuZ2VzT2JqZWN0PGJvb2xlYW4+XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgVGFnTGlzdCA9IHtcclxuICAgICAgICBiaW5kaW5nczogVGFnTGlzdEJpbmRpbmdzLFxyXG4gICAgICAgIHRlbXBsYXRlVXJsOiAndGFnX2xpc3QvdGFnX2xpc3QuaHRtbCcsXHJcbiAgICAgICAgY29udHJvbGxlcjogVGFnTGlzdENvbnRyb2xsZXJcclxuICAgIH1cclxuXHJcbiAgICBhbmd1bGFyLm1vZHVsZSgncGlwVGFnTGlzdCcsIFsncGlwTGlzdC5UcmFuc2xhdGUnXSlcclxuICAgICAgICAuY29tcG9uZW50KCdwaXBUYWdMaXN0JywgVGFnTGlzdClcclxuXHJcbn0pKCk7IiwiKGZ1bmN0aW9uKG1vZHVsZSkge1xudHJ5IHtcbiAgbW9kdWxlID0gYW5ndWxhci5tb2R1bGUoJ3BpcExpc3RzLlRlbXBsYXRlcycpO1xufSBjYXRjaCAoZSkge1xuICBtb2R1bGUgPSBhbmd1bGFyLm1vZHVsZSgncGlwTGlzdHMuVGVtcGxhdGVzJywgW10pO1xufVxubW9kdWxlLnJ1bihbJyR0ZW1wbGF0ZUNhY2hlJywgZnVuY3Rpb24oJHRlbXBsYXRlQ2FjaGUpIHtcbiAgJHRlbXBsYXRlQ2FjaGUucHV0KCd0YWdfbGlzdC90YWdfbGlzdC5odG1sJyxcbiAgICAnPGRpdiBjbGFzcz1cInBpcC1jaGlwIHJtNCBwaXAtdHlwZS1jaGlwIHBpcC10eXBlLWNoaXAtbGVmdCB7e1xcJ2JnLVxcJyArICRjdHJsLnR5cGUgKyBcXCctY2hpcHNcXCd9fVwiIG5nLWlmPVwiJGN0cmwudHlwZSAmJiAhJGN0cmwudHlwZUxvY2FsXCI+PHNwYW4+e3skY3RybC50eXBlLnRvVXBwZXJDYXNlKCkgfCB0cmFuc2xhdGUgfCB1cHBlcmNhc2V9fTwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWNoaXAgcm00IHBpcC10eXBlLWNoaXAgcGlwLXR5cGUtY2hpcC1sZWZ0IHt7XFwnYmctXFwnICsgJGN0cmwudHlwZSArIFxcJy1jaGlwc1xcJ319XCIgbmctaWY9XCIkY3RybC50eXBlICYmICRjdHJsLnR5cGVMb2NhbFwiPjxzcGFuPnt7JGN0cmwudHlwZUxvY2FsLnRvVXBwZXJDYXNlKCkgfCB0cmFuc2xhdGUgfCB1cHBlcmNhc2V9fTwvc3Bhbj48L2Rpdj48ZGl2IGNsYXNzPVwicGlwLWNoaXAgcm00XCIgbmctcmVwZWF0PVwidGFnIGluICRjdHJsLnRhZ3NcIj48c3Bhbj57ezo6dGFnfX08L3NwYW4+PC9kaXY+Jyk7XG59XSk7XG59KSgpO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1waXAtd2VidWktbGlzdHMtaHRtbC5taW4uanMubWFwXG4iXX0="}
>>>>>>> 9a37eed0d326f682441cc6d15928e372e56139a0
