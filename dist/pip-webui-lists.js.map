{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","src/dependencies/translate.ts","src/lists.ts","src/tag_list/tag_list.ts","temp/pip-webui-lists-html.min.js"],"names":[],"mappings":"AAAA;ACOA,CAAC;IACG,YAAY,CAAC;IAEb,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;IAEzD,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,UAAU,SAAS;QAC9C,IAAI,YAAY,GAAG,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;cAC1C,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC;QAE3C,MAAM,CAAC,UAAU,GAAG;YAChB,MAAM,CAAC,YAAY,GAAI,YAAY,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG,CAAC;QACpE,CAAC,CAAA;IACL,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,EAAE,CAAC;;;ACdL,CAAC;IACG,YAAY,CAAC;IAEb,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,CAAE,YAAY,CAAE,CAAC,CAAC;AAEjD,CAAC,CAAC,EAAE,CAAC;;;ACFL;IAOI,2BACK,MAAiB,EACjB,QAAgC;QAFrC,iBAmBE;QAbE,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAC9B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;QAC9B,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC;QAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;gBACrB,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACP,CAAC;QAED,QAAQ,CAAC,GAAG,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,QAAQ,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;IACrC,CAAC;IAEO,qCAAS,GAAjB,UAAkB,KAAa;QAC5B,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QAC1D,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC;YAAC,MAAM,CAAC,KAAK,CAAC;QACzB,KAAK,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC;QACvC,MAAM,CAAC,KAAK,IAAI,GAAG,IAAI,KAAK,IAAI,MAAM,CAAC;IAC1C,CAAC;IACL,wBAAC;AAAD,CAlCD,AAkCE,IAAA;AAEF,CAAC;IACG,YAAY,CAAC;IAOZ,iBAAkB,MAAM;QACrB,MAAM,CAAC;YACH,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE;gBACH,OAAO,EAAE,GAAG;gBACZ,OAAO,EAAE,GAAG;gBACZ,YAAY,EAAE,GAAG;aACpB;YACD,WAAW,EAAE,wBAAwB;YACrC,UAAU,EAAE,iBAAiB;YAC7B,YAAY,EAAE,OAAO;SACxB,CAAC;IACL,CAAC;IAEF,OAAO,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC,mBAAmB,CAAC,CAAC;SAC9C,SAAS,CAAC,YAAY,EAAE,OAAO,CAAC,CAAA;AAEzC,CAAC,CAAC,EAAE,CAAC;;;ACvEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"pip-webui-lists.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * @file Optional filter to translate string resources\n * @copyright Digital Living Software Corp. 2014-2016\n */\n \n/* global angular */\n\n(function () {\n    'use strict';\n\n    var thisModule = angular.module('pipList.Translate', []);\n\n    thisModule.filter('translate', function ($injector) {\n        var pipTranslate = $injector.has('pipTranslate') \n            ? $injector.get('pipTranslate') : null;\n\n        return function (key) {\n            return pipTranslate  ? pipTranslate.translate(key) || key : key;\n        }\n    });\n\n})();\n","ï»¿/**\n * @file Registration of all WebUI list controls\n * @copyright Digital Living Software Corp. 2014-2016\n */\n\n/* global angular */\n\n(() => {\n    'use strict';\n\n    angular.module('pipLists', [ 'pipTagList' ]);\n    \n})();","/**\n * @file Tag list control\n * @copyright Digital Living Software Corp. 2014-2015\n */\ninterface ITagList {\n    tags: string[];\n    type: string;\n    typeLocal: string;\n}\n\nclass TagListController implements ITagList {\n    private _rebind: string;\n\n    public tags: string[];\n    public type: string;\n    public typeLocal: string;\n\n    constructor(\n         $scope: ng.IScope, \n         $element: ng.IRootElementService\n    ) {\n\n        // Set tags\n        this.tags = $scope['pipTags'];\n        this.type = $scope['pipType'];\n        this.typeLocal = $scope['pipTypeLocal'];\n        this._rebind = $scope['pipRebind'];\n      \n        if (this.toBoolean(this._rebind)) {\n            $scope.$watch('pipTags', () => {\n                this.tags = $scope['pipTags'];\n            });\n        }\n\n        $element.css('display', 'block');\n        $element.addClass('pip-tag-list');\n     }\n\n     private toBoolean(value: string): boolean {\n        if (_.isNull(value) || _.isUndefined(value)) return false;\n        if (!value) return false;\n        value = value.toString().toLowerCase();\n        return value == '1' || value == 'true';\n     }\n }\n\n(() => {\n    'use strict';\n\n     /**\n     * pipTags - set of tags\n     * pipType - additional type tag\n     * pipTypeLocal - additional translated type tag\n     */\n     function TagList ($parse) {\n        return {\n            restrict: 'E',\n            scope: {\n                pipTags: '=',\n                pipType: '=',\n                pipTypeLocal: '='\n            },\n            templateUrl: 'tag_list/tag_list.html',\n            controller: TagListController,\n            controllerAs: '$ctrl'\n        };\n     }\n\n    angular.module('pipTagList', ['pipList.Translate'])\n        .directive('pipTagList', TagList)\n\n})();\n","(function(module) {\ntry {\n  module = angular.module('pipLists.Templates');\n} catch (e) {\n  module = angular.module('pipLists.Templates', []);\n}\nmodule.run(['$templateCache', function($templateCache) {\n  $templateCache.put('tag_list/tag_list.html',\n    '<div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && !$ctrl.typeLocal\"><span>{{$ctrl.type.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4 pip-type-chip pip-type-chip-left {{\\'bg-\\' + $ctrl.type + \\'-chips\\'}}\" ng-if=\"$ctrl.type && $ctrl.typeLocal\"><span>{{$ctrl.typeLocal.toUpperCase() | translate | uppercase}}</span></div><div class=\"pip-chip rm4\" ng-repeat=\"tag in $ctrl.tags\"><span>{{::tag}}</span></div>');\n}]);\n})();\n\n//# sourceMappingURL=pip-webui-lists-html.min.js.map\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}