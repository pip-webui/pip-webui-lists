!function(p){try{p=angular.module("pipLists.Templates")}catch(t){p=angular.module("pipLists.Templates",[])}p.run(["$templateCache",function(p){p.put("tag_list/tag_list.html",'<div class="pip-chip rm4 pip-type-chip pip-type-chip-left {{\'bg-\' + pipType + \'-chips\'}}" ng-if="pipType && !pipTypeLocal"><span>{{pipType.toUpperCase() | translate | uppercase}}</span></div><div class="pip-chip rm4 pip-type-chip pip-type-chip-left {{\'bg-\' + pipType + \'-chips\'}}" ng-if="pipType && pipTypeLocal"><span>{{pipTypeLocal.toUpperCase() | translate | uppercase}}</span></div><div class="pip-chip rm4" ng-repeat="tag in pipTags"><span>{{::tag}}</span></div>')}])}(),function(){"use strict";angular.module("pipLists",["pipTagList"])}(),function(){"use strict";var p=angular.module("pipList.Translate",[]);p.filter("translate",["$injector",function(p){var t=p.has("pipTranslate")?p.get("pipTranslate"):null;return function(p){return t?t.translate(p)||p:p}}])}(),function(){"use strict";var p=angular.module("pipTagList",["pipList.Translate"]);p.directive("pipTagList",["$parse",function(p){return{restrict:"EA",scope:{pipTags:"=",pipType:"=",pipTypeLocal:"="},templateUrl:"tag_list/tag_list.html",controller:["$scope","$element","$attrs",function(t,i,a){function e(p){return null!=p&&(!!p&&(p=p.toString().toLowerCase(),"1"==p||"true"==p))}var s;s=p(a.pipTags),i.css("display","block"),t.tags=s(t),e(a.pipRebind)&&t.$watch(s,function(){t.tags=s(t)}),i.addClass("pip-tag-list")}]}}])}();
//# sourceMappingURL=pip-webui-lists.min.js.map
